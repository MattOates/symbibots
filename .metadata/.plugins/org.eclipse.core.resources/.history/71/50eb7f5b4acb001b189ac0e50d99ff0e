/**
 * 
 */
package game;

import java.awt.Graphics2D;
import java.awt.Shape;
import java.awt.geom.Point2D;
import vis.Visualisable;

/**
 * @author  matt
 */
public abstract class Entity implements Visualisable {
	
	protected Shape bounds; 
	
	protected Point2D.Double position;
	
	protected World world;
	
	//Velocity
	protected double dx;
	protected double dy;
	
	//FRICTION to reduce the velocity of all objects.
	protected static double FRICTION = 0.8;
	
	public Entity (World world) {
		this.world = world;
		position = new Point2D.Double(Math.random() * world.getWidth(), Math.random() * world.getHeight());
	}
	
	public void visualise (Graphics2D graphics) {
		graphics.setClip(bounds);
		//graphics.drawOval(arg0, arg1, arg2, arg3);
	}
	
	public void update() {
		dx *= Entity.FRICTION;
		dy *= Entity.FRICTION;
		position.setLocation(position.x + dx, position.y + dy);  
	}
	
	public abstract void collide(Entity entity);

	/**
	 * @return  the dx
	 */
	public double getDx() {
		return dx;
	}

	/**
	 * @param dx  the dx to set
	 */
	public void setDx(double dx) {
		this.dx = dx;
	}

	/**
	 * @return  the dy
	 */
	public double getDy() {
		return dy;
	}

	/**
	 * @param dy  the dy to set
	 */
	public void setDy(double dy) {
		this.dy = dy;
	}
	
}
