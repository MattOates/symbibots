/**
 * 
 */
package game;

import ga.Chromosome;
import ga.GeneticAlgorithm;

import java.awt.Graphics2D;
import java.util.LinkedList;

/**
 * @author matt
 *
 */
public class Agent extends Entity {
	
	private LinkedList<Chromosome> chromosomes = new LinkedList<Chromosome>();
	
	private int numofsymbionts = 0;
	
	private int fitness = 0;
	
	public Agent(World world) {
		super(world);
		chromosomes.add(new Chromosome(this));
	}
	
	public Agent(World world, Chromosome chromosome) {
		super(world);
		chromosomes.add(chromosome);
	}
	
	public void visualise(Graphics2D graphics) {
		
	}
	
	public int calcFitness() {
		return fitness++;
	}
	
	public void addSymbiont(Agent agent) {
		LinkedList<Chromosome> symbiont = agent.getChromosomes();
		for (Chromosome temp : symbiont) {
			chromosomes.add(temp);
		}
		numofsymbionts++;
	}
	
	public void doTick() {
		for (Chromosome chromosome : chromosomes) chromosome.expressPhenotype();
	}
	
	/**
	 * @see java.lang.Object#toString()
	 */
	@Override
	public String toString() {
		StringBuffer string = new StringBuffer();
		for(Chromosome chromosome : chromosomes) {
			string.append(chromosome.toString());
			string.append("\n");
		}
		return string.toString();
	}
	
	public int getNumOfGenes() {
		return chromosomes.size() * GeneticAlgorithm.chromosomeSize;
	}

	/**
	 * @return the chromosomes
	 */
	public LinkedList<Chromosome> getChromosomes() {
		return chromosomes;
	}

	/**
	 * @param chromosomes the chromosomes to set
	 */
	public void setChromosomes(LinkedList<Chromosome> chromosomes) {
		this.chromosomes = chromosomes;
	}

	/**
	 * @return the numofsymbionts
	 */
	public int getNumofsymbionts() {
		return numofsymbionts;
	}

	/**
	 * @param numofsymbionts the numofsymbionts to set
	 */
	public void setNumofsymbionts(int numofsymbionts) {
		this.numofsymbionts = numofsymbionts;
	}

	/**
	 * @return the fitness
	 */
	public int getFitness() {
		return fitness;
	}

	/**
	 * @param fitness the fitness to set
	 */
	public void setFitness(int fitness) {
		this.fitness = fitness;
	}
	
}
